name: Deploy to Production on Cloud Run

on:
  push:
    branches:
      - main

jobs:
  astro-prod: 
    # ...

    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{secrets.WIF_PROVIDER}}'
          service_account: '${{secrets.SERVICE_ACCOUNT}}'

      # Create Artifact Repository
      # - name: Create Artifact Repository
      #   id: artifactrepo
      #   run: |-
      #         gcloud artifacts repositories create "${{ vars.ARTIFACT_REPOSITORY_NAME }}" \
      #           --repository-format=docker \
      #           --location="${{ vars.GCP_LOCATION }}" \
      #           --description="Docker images for ${{ vars.GCP_SERVICE_NAME }}" \
      #           --format="json"

      # Authenticate Docker to Google Cloud Artifact Registry, and then build and push image
      - name: Docker Auth
        id: docker-auth
        run: |-
          gcloud --quiet auth configure-docker '${{vars.GCP_LOCATION}}-docker.pkg.dev'

      - name: Build Container & deploy to Artifact Registry
        run: |-
          docker build -t "${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY_NAME }}/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}" -f Dockerfile ./

          docker push "${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY_NAME }}/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}"

      # END - Docker auth and build

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_SERVICE_NAME }}
          region: ${{ vars.GCP_LOCATION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY_NAME }}/${{ vars.GCP_SERVICE_NAME }}:${{ github.sha }}

        # NOTE: You can also set env variables here:
        #  NODE_ENV=production
        #  TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
